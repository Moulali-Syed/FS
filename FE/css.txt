CSS - Cascading Style Sheets


selector{
    property:value;
}

div{
    color:red;
}


Three ways of adding css:

inline: add css properties next to HTML element
    <h1 style="color: blue">Welcome to CSS Tutorial</h1>
    <p style="background-color: crimson">By Web Dev Master</p>


Internal: add css inside <style></style> inside the head tag
    <style>
      h1 {
        color: brown;
        background-color: cadetblue;
      }
    </style>
    <h1>Welcome to CSS Tutorial</h1>


External: add css inside a separate file and link it to HTML file 
add the style sheet as below
    <link rel="stylesheet" href="style.css" />

h1 {
  background-color: red;
  color: black;
  font-weight: 500;
  font-family: sans-serif;
}

===========================================================================
CSS Selectors:

1.element selector  
        element{

        }
        p{

        }

2.universal selector
        *{
            color:aqua;
        }

3.class selector
    .className{

    }

    <p class="custom">this is paragraph element</p>
    .custom{
        color:pink;
    }
<!--  color:initial  -->

4.  !important  , never use this 

    p{
        color: red !important;
    }

5.id Selector
#blacked {
  color: red;
}
<p id="blacked"></p>

6. attribute selector

    <a href="instagram">Instagram</a>
    <a href="facebook">Facebook</a>
    <a href="google">google</a>
    <a href="netflix">NetFlix</a>

/* contains */
a[href*='insta'] {
  color: green;
}

a[href='facebook'] {
  color: yellow;
}

/* starts with */
a[href^='go'] {
  color: brown;
}

/* endswith */
a[href$='ix'] {
  color: red;
}

7. multiple element Selectors   
        div,p,h1{
            color:red;
        }

8. child selector
        selects only the paragraph inside span
        span > p{

        }

        span p{
            selects all paragraphs that are inside span , can be nested at any level
        }

        h1+p{
            adjacent sibling , only those p which are next to h1 
        }

        h1~p{
            general sibling selector 
        }

===========================================================================
CSS Properties:



/* -------- color related ------------- */

1.color property
    color:red;
    color:rgb(255,0,0);
    color:rgba(255,0,0,0.2);
    color:#000;
    color: hsl(30, 100%, 20%);
    color:hsla(30,100%,20%,0.9);

2.background-color property 
    background-color: red;

/* -------- font related ------------- */

1.
  font-family: sans-serif;


2.
  font-size: large; , can specify in px, rem,em

3.
  font-style: italic;

4.
  font-weight: bold;

/* -------- aligning text content ------------- */
1.
    text-align: center;
    justify , left, right

/* -------- text transformation ------------- */

1.
    text-transform: uppercase; 
    lowercase, capitalize

/* -------- text decoration ------------- */
1.

    text-decoration: underline;
    overline , line-through

/* -------- text Indent ------------- */
1.
    text-indent : 25%;
    leaves a gap of 25% of page at start 

/* -------- line-height ------------- */
1.
    line-height: 10px;

/* -------- letter-spacing ------------- */
1.
    letter-spacing: 4px;

/* -------- word-spacing ------------- */
1.
    word-spacing: 10px;

/* -------- text-shadow ------------- */
    text-shadow: 0 0 10 green;
  text-shadow: 0 0 2px green;
                x y blur color

/* -------- background properties ------------- */
1. 
    background-color: red;

2.
    background-image: url('https://cdn.pixabay.com/photo/2023/04/11/16/12/sea-7917683__340.jpg');

3.
    background-repeat: no-repeat;

4.
    background-attachement: fixed;

5.
    background-size: cover;
    contain 

6.
  /* top,left,center,25% 75% , bottom 50pc right 100px , right 35% bottom 45% */
    background-position: 10px 30px;

body {
  background-color: pink;
  background-image: url('https://cdn.pixabay.com/photo/2023/04/11/16/12/sea-7917683__340.jpg');
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
  /* top,left,center,25% 75% , bottom 50pc right 100px , right 35% bottom 45% */
  background-position: 10px 30px;
}
===========================================================================
Relative and Absolute units :

relative:
    %  - relative to parent
    em - relative to parent 
    rem - relative root html element

    vw - viewport width
    vh - viewport height 


    vmax - which ever of height or width is more
    vmin - whichever of height or width is less 

absolute:
    px , cm  

===========================================================================
Styling a list

-->  li*5{option$}  , emmet 


ul {
  /* circle , square */
  list-style-type: disc;
  /* inside,outside */
  list-style-position: inside;

  list-style-image: url('');

  list-style: none;
  /* shorthand - list-style: type position image */
  /* we mostly use --> list-style:none */
}


/* -----    Box Model  --------- */
box-sizing: border-box ;  (default is content-box)

margin  ,  padding , border  

  border: 2px solid black;
  padding: 40px 120px 80px;
  margin: 20px 50px;


/* --------  overflow property  ------------- */
overflow: hidden ;  (scroll, auto )


/*  --------  gradient   -----------  */
  background-image: linear-gradient(
    to bottom,
    rgb(239, 234, 127),
    rgb(227, 99, 125)
  );

/* ---------  to horizontally center using margin property   -------*/
margin: 0 auto;

/* -----------   provide a smooth scroll behaviour  ---------  */
  scroll-behavior: smooth;


/*   -------  hover pseudo clas  ----------  */
a:hover{

}
===========================================================================
CSS Layout - Landing Page  -  A demo page 

  <body>
    <header>
      <a href="">Home</a><a href="">Contact</a><a href="">About</a>
    </header>
    <section>
      <h1>Welcome to First Website</h1>
      <img
        src="https://cdn.pixabay.com/photo/2014/12/08/17/52/horse-561221_640.jpg"
        alt="Horse"
      />
    </section>
    <footer>
      <a href="#">INSTAGRAM</a>
    </footer>
  </body>

  -----

  * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;

  scroll-behavior: smooth;
}

header {
  border: 2px solid red;
  padding: 50px;
  background-color: crimson;
}
header > a {
  color: white;
  text-decoration: none;
  text-transform: uppercase;
  margin: 0 20px;
  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}
header > a:hover {
  color: black;
}
section {
  height: 400px;
  width: 1000px;
  margin: 0 auto;
  background-image: linear-gradient(
    to bottom,
    rgb(239, 234, 127),
    rgb(227, 99, 125)
  );
  text-align: center;
  padding: 20px;
  font-family: sans-serif;
  font-size: 1.5rem;
}
section img {
  width: 400px;
}
footer {
  border: 2px solid black;
  width: 1000px;
  margin: auto;
  background-color: #363333;
  text-align: center;
  padding: 50px 0;
}
footer > a {
  color: white;
  text-decoration: none;
}


===========================================================================
/*   --------    float      ---------------  */

 <body>
    <div id="first">1</div>
    <div id="second">2</div>
    <div id="third">3</div>
  </body>

        body {
        border: 2px solid black;
      }
      div {
        width: 100px;
        height: 100px;
      }
      #first {
        background-color: burlywood;
      }
      #second {
        background-color: crimson;
        float: right;
      }
      #third {
        clear: right;
        background-color: green;
      }

  we can use float: left /right to move the element , it will leaves its position and float 
  using clear:left /right /both we can clear the float property


/*   --------    display      ---------------  */  

display:inline;
display:block;
display:inline-block;

/*  ----------  position --------------- */

static (by default)   ,  relative  , absolute , fixed  , sticky

position:static ;//no change

---
position:relative;<moves from its actual position>
top:20px;
left:20px;

---
position:absoulte; <moves relative to positioned parent , if no positioned parent then w.r.t body>
top:120px;
left:20px;

---
<this will get sticked to the position mentioned though we scroll, mostly used in navbar>
aticky behaves like a regular element until reaches the defined offset and then becomes fixed 
position:sticky; 
top:0;

---
position:fixed; <this will get fixed at the mentioned position> - relative to viewport
bottom:0px;
right:0px;
===========================================================================

Styling a  Form 

outline:none; //can be set on form input elements
max-width:800px;

border-radius: 20px;//smoothens edges

cursor:pointer;

------
  <body>
    <form action="" method="POST">
      <h1>CONTACT US</h1>
      <div>
        <label for="name">Name:</label>
        <input
          type="text"
          name="username"
          id="name"
          placeholder="Enter your name"
          required
        />
      </div>
      <br />
      <div>
        Email:
        <input
          type="email"
          name="useremail"
          id="email"
          placeholder="Enter your email"
          required
        />
      </div>
      <br />
      <div>
        Message:
        <textarea
          placeholder="Enter your message"
          required
          name="usermessage"
          id="usermsg"
          cols="60"
          rows="10"
          style="resize: none"
        ></textarea>
      </div>
      <br />
      <div>
        Number: <input type="number" name="usernumber" id="number" required />
      </div>
      <br />
      <div>
        Gender:
        <select name="gender" id="gender" required>
          <option value="">--select--</option>
          <option value="male">Male</option>
          <option value="female">Female</option>
          <option value="others">Others</option>
        </select>
      </div>
      <br />
      <div class="checky">
        Frontend:
        <input type="checkbox" name="skills" id="fe" /> Backend:
        <input type="checkbox" name="skills" id="be" />
      </div>
      <br />
      <fieldset>
        <legend>Mode of Payment</legend>
        Cash: <input type="radio" name="payment" id="cash" required /> Bank:
        <input type="radio" name="payment" id="bank" required />
      </fieldset>
      <br />
      <div>
        Password:
        <input type="password" name="password" id="password" required />
      </div>
      <br />
      <input type="submit" value="Submit" />
    </form>
  </body>
------
body {
  margin: 0;
  padding: 0;
  background-color: aliceblue;
}
form {
  max-width: 800px;
  margin: 0 auto;
  background-color: rgb(230, 226, 226);
  color: #1c1c1c;
  padding: 10px;
  font-size: 18px;
  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}
form > div {
  margin: 10px auto;
  width: 700px;
}
h1 {
  text-align: center;
  margin: 40px;
}

input[type='text'],
input[type='email'],
input[type='number'],
input[type='password'],
textarea,
select {
  width: 80%;
  padding: 6px;
  border-radius: 5px;
  border: none;
  outline: none;
  font-weight: 600;
}

input[type='submit'] {
  width: 120px;
  padding: 6px;
  font-size: medium;
  font-weight: bold;
  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
  display: block;
  margin: 20px auto;
  border: none;
  background-color: white;
  border-radius: 20px;
  color: white;
  background-color: crimson;
  cursor: pointer;
}
input[type='submit']:hover {
  background-color: rgb(248, 6, 54);
}

.checky {
  border: 1px solid rgba(67, 64, 64, 0.568);
  border-radius: 5px;
  padding: 20px;
}

===========================================================================
Mastering the Chrome Developer tools:

Inspect webpage - open dev tools and edit and try different properties 

===========================================================================
Add google font 

go to google fonts - select the required font
copy the link tags and paste in html file 

and copy the font-family: 'Roboto', sans-serif; to css file 
===========================================================================

A demo landing page:

  <body>
    <header>
      <div class="logobox">ELLA MODELS.</div>
      <div class="navbox">
        <a href="#" id="homie">Home</a><a href="#">Models</a
        ><a href="#">About</a><a href="#">Apply</a><a href="#">Contact</a>
      </div>
    </header>

    <h1 class="heading">
      ELLA <br />
      MODELS
    </h1>
    <h3>NEW YORK</h3>
    <p>
      I'm a paragraph.Click here to add your own text and edit me. It's easy.
      Click "Edit text" or double click me.
    </p>
    <button class="btn">Enroll Now</button>

    <footer>Created by &copy; moulali</footer>
  </body>

  -----

body {
  background-image: url('./bg.webp');
  font-family: 'Roboto', sans-serif;
  height: 110vh;
}

header {
  padding: 2rem;
  color: white;
  position: sticky;
  top: 0;
}

.logobox {
  display: inline-block;
  width: 150px;
  font-size: 1.3rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.5s;
}
.logobox:hover {
  color: salmon;
}
.navbox {
  width: 600px;
  display: inline-block;
  position: absolute;
  right: 20px;
}

.navbox > a {
  color: white;
  margin: 20px;
  text-decoration: none;
  transition: all 0.5s;
}
.navbox > a:hover {
  color: salmon;
}
#homie {
  color: pink;
}

.heading {
  color: salmon;
  font-size: 80px;
  position: relative;
  top: 30px;
  left: 70px;
  width: 500px;
}
.heading + h3 {
  color: white;
  font-size: 40px;
  position: relative;
  left: 90px;
}
.heading + h3 + p {
  color: white;
  position: relative;
  top: 40px;
  left: 80px;
  width: 400px;
  word-spacing: 4px;
  font-style: italic;
}

.btn {
  width: 150px;
  padding: 15px;
  border: 2px solid salmon;
  background-color: salmon;
  color: black;
  position: relative;
  top: 50px;
  left: 80px;
  font-size: 1.02rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.5s;
}

.btn:hover {
  background-color: rgba(241, 241, 241, 0);
  color: white;
}
footer {
  color: white;
  position: fixed;
  bottom: 0;
}

===========================================================================
Make Responsive websites - Add Media Queries

1.Try using relative units
    like vw, vh , % , rem , em

2.Using flexbox and grid we can minimize the requirement of media queries 

3.media queries

    //desktop first approach 
    max-width means it will be applied from 0 to 600px
    @media all and (max-width:600px){

    }

    //mobile first approach
    min-width means it will be applied once the mentioned px is reached and above 
    @media all and (min-width:480px){

    }

@media screen and (min-width:572px){

}
===========================================================================
Flexbox:

This is used for 1 dimensional layout 
  we have main axis (horizontal by default)
          cross axis (vertical by default)

          
flex container   - will have flex items 

flex container properties:

display:flex;
    this make all the content inside the container to be in a single row 

display:inline-flex;
    takes width as necessary as container 

justify-content: center;
    center  |  flex-start  | flex-end |space-between | space-evenly |space-around
    used to align along the main axis 

align-items:center;
    center  |  flex-start  | flex-end  | stretch(when height is not mentioned)
    used to align items along the cross axis 

flex-direction:column;
    row(default) | row-reverse | column | column-reverse 
    changes the main and cross axis 

flex-wrap:wrap;
      nowrap(default) | wrap | wrap-reverse;
      this moves the flex-item into next row , when there is no enough space 

align-content:center;
      when we have the flex-wrap set on our container , we can use align-content 

flex-flow:row-reverse wrap;
      is a short hand property , using it we can set flex-direction and flex-wrap 

row-gap:20px;
column-gap:20px;
gap: 20px 20px;

/*  -------------- flex item properties  ---------  */

align-self:flex-start;
      flex-start |  flex-end  |  center  |  stretch 
      used to align a particular flex item along cross axis 

flex-grow: 2;
        the mentioned flex-item grows 2 times faster

flex-shrink: 3;
        the mentioned flex item shrinks 3 times faster

flex-basis:100px;
        used to set a default width

flex: 0 1 auto; //flex-grow flex-shrink flex-basis    are default properties 

order: 1;//the flex item will go to last
by default all flex items have a default order of 0 
===========================================================================

Demo Ecommerce WebSite 


  <body>
    <nav>
      <div class="left">
        <a href="/">6PP.</a>
      </div>
      <div class="mid">
        <a href="#">Home</a>
        <a href="#products">Products</a>
        <a href="#">About</a>
        <a href="#footer">Contact</a>
      </div>
      <div class="right">
        <img src="./image/image/profile.svg" alt="Profile" />
        <img src="./image/image/cart.svg" alt="Cart" />
      </div>
    </nav>

    <section class="home">
      <div class="container" id="leftContainer">
        <h1>Live Your Life In</h1>
        <h2>A New Style!</h2>
        <p>
          They say first impression is the last impression. Don't wait , Bless
          yourself with perfect clothing
        </p>
        <button>Explore Now &rarr;</button>
      </div>
      <div class="container" id="rightContainer">
        <img src="./image/image/home.png" alt="" />
      </div>
    </section>

    <section id="products">
      <h1>Products</h1>
      <div class="productsContainer">
        <!-- --------------------------- -->
        <div class="product">
          <img src="image/image/1.webp" alt="1st product" />
          <h4>CYAN T-SHIRT</h4>
          <h5>$100</h5>
        </div>
        <!-- --------------------------- -->
        <div class="product">
          <img src="image/image/2.webp" alt="1st product" />
          <h4>CYAN T-SHIRT</h4>
          <h5>$100</h5>
        </div>
        <!-- --------------------------- -->
        <div class="product">
          <img src="image/image/3.webp" alt="1st product" />
          <h4>CYAN T-SHIRT</h4>
          <h5>$100</h5>
        </div>
        <!-- --------------------------- -->
        <div class="product">
          <img src="image/image/4.webp" alt="1st product" />
          <h4>CYAN T-SHIRT</h4>
          <h5>$100</h5>
        </div>
        <!-- --------------------------- -->
        <div class="product">
          <img src="image/image/5.webp" alt="1st product" />
          <h4>CYAN T-SHIRT</h4>
          <h5>$100</h5>
        </div>
        <!-- --------------------------- -->
        <div class="product">
          <img src="image/image/6.jpg" alt="1st product" />
          <h4>CYAN T-SHIRT</h4>
          <h5>$100</h5>
        </div>
        <!-- --------------------------- -->
        <div class="product">
          <img src="image/image/7.webp" alt="1st product" />
          <h4>CYAN T-SHIRT</h4>
          <h5>$100</h5>
        </div>
        <!-- --------------------------- -->
        <div class="product">
          <img src="image/image/8.webp" alt="1st product" />
          <h4>CYAN T-SHIRT</h4>
          <h5>$100</h5>
        </div>
        <!-- --------------------------- -->
      </div>
    </section>
    <footer id="footer">
      <div class="leftFooter">
        <h4>Download our App</h4>
        <p>Download app for android and ios mobile phone</p>
        <img src="image/image/playstore.png" alt="playstore" />
        <img src="image/image/Appstore.png" alt="appstore" />
      </div>
      <div class="midFooter">
        <h1>6PP</h1>
        <p>
          Our purpose is to sustainably make the pleasure and benefits of
          clothes accessible to the many
        </p>
        <p>Copyrights 2021 &copy; Apple</p>
      </div>
      <div class="rightFooter">
        <h4>Follow us</h4>
        <a href="http://google.com">Instagram</a>
        <a href="https://youtube.com">Youtube</a>
        <a href="https://facebook.com">facebook</a>
      </div>
    </footer>
  </body>


  ----
body {
  margin: 0;
}
* {
  scroll-behavior: smooth;
}
nav {
  height: 4vmax;
  display: flex;
  align-items: center;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.507);
  position: sticky;
  top: 0%;

  background-color: white;
  z-index: 1;
}
.left {
  width: 20%;
  display: flex;
  justify-content: center;
}

.left > a {
  text-decoration: none;
  color: crimson;
  font-size: 2vmax;
  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}

.mid {
  width: 60%;
  display: flex;
  justify-content: space-evenly;
  align-self: stretch;
}
.mid > a {
  text-decoration: none;
  color: black;
  font-size: 1.4vmax;
  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: all 0.3s;
}

.mid > a:hover {
  border-bottom: 2px solid crimson;
  color: crimson;
}

.right {
  width: 20%;
  display: flex;
  justify-content: center;
}

.right > img {
  width: 2.5vmax;
  margin: 1vmax;
  cursor: pointer;
}

.home {
  height: 90vh;
  background-image: linear-gradient(
    to right,
    rgb(165, 240, 240),
    rgb(110, 110, 224)
  );
  display: flex;
}

.container {
  width: 100%;
}

#rightContainer {
  display: flex;
  justify-content: flex-end;
}

#rightContainer > img {
  margin-right: 7vmax;
  filter: drop-shadow(0 0 10px black);
}
#leftContainer {
  display: flex;
  flex-direction: column;
  padding: 3vmax;
  box-sizing: border-box;
  justify-content: center;
}

#leftContainer > h1 {
  font-size: 4vmax;

  font-family: sans-serif;
}

#leftContainer > h2 {
  font-size: 2vmax;
  margin-top: -8%;
  font-family: sans-serif;
}

#leftContainer > p {
  font-size: 1.2vmax;
  margin-left: 2%;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

#leftContainer > button {
  width: 10vmax;
  padding: 0.7vmax;
  margin-left: 2%;
  border: none;
  border-radius: 2vmax;
  background-color: crimson;
  color: white;
  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',
    'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
  cursor: pointer;
}
#leftContainer > button:hover {
  background-color: rgb(174, 23, 53);
}
/* ---------------------------------- */

#products > h1 {
  text-align: center;
  margin: 5vmax auto;
  font-size: 2vmax;
  border-bottom: 2px solid crimson;
  padding: 1vmax;
  width: 25vw;
}
.productsContainer {
  display: flex;
  height: 100%;
  max-width: 80vw;
  margin: auto;
  flex-wrap: wrap;
  justify-content: space-evenly;
}
.product {
  width: 22vmax;
  height: 30vmax;
  display: flex;
  flex-direction: column;
  align-items: center;
  transition: all 0.3s;
  cursor: pointer;
}
.product > img {
  width: 20vmax;
}
.product > h4 {
  margin: 2%;
}
.product > h5 {
  margin: 0%;
}
.product:hover {
  transform: translateY(-10px);
}

footer {
  margin-top: 10vmax;
  padding: 2vmax;
  background-color: rgb(34, 33, 33);
  color: white;
  display: flex;
  align-items: center;
}
.leftFooter {
  width: 20%;
  display: flex;
  flex-direction: column;
  align-items: center;
  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',
    'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
}
.leftFooter > p {
  text-align: center;
}
.leftFooter > img {
  width: 10vmax;
  margin: 1vmax;
  cursor: pointer;
}
.midFooter {
  width: 60%;
  text-align: center;
}
.midFooter > h1 {
  font-size: 4vmax;
  color: crimson;
  text-align: center;
  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}
.midFooter > p {
  max-width: 60%;
  margin: 1vmax auto;
}

.rightFooter {
  width: 20%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.rightFooter > a {
  text-decoration: none;
  color: white;
  margin: 0.5vmax;
  font-size: 1.3vmax;
  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}

.rightFooter > h4 {
  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
  font-size: 1.4vmax;
  text-decoration: underline;
}
===========================================================================
CSS Grid :

display:grid;

grid-template-columns: 100px 200px 100px;| 1fr 1fr 1fr | 30% 30% 30% | repeat(3,1fr) | repeat(autofill,30%) |
                        repeat(auto-fill,minmax(400px,1fr)) | 300px mimmax(400px,1fr)
grid-template-rows: 200px 200px;

grid-gap:10%;


    <div class="container">
      <div class="box">1</div>
      <div class="box">2</div>
      <div class="box">3</div>
      <div class="box">4</div>
      <div class="box">5</div>
      <div class="box">6</div>
    </div>
===========================================================================

CSS Transition , Transformation , Animation 

.box {
  background-color: rgb(45, 45, 45);
  height: 100px;
  width: 100px;
  font: bold 2rem cursive;
  color: white;
  margin: 2vmax;
  /* transition: background-color 0.5s; */
  transition-property: background-color;
  transition-duration: 0.5s;
  /* ease-in , ease-out , ease-in-out */
  transition-timing-function: ease-in;
  transition-delay: 2s;
  transition: background-color 0.5s ease-in 2s, color 0.3s ease-out 1s;
  /* shorthand */
  transition: all 0.3s ease-in 0.2s;
}

.box:hover {
  background-color: tomato;
  color: blue;
  width: 80%;

  /* skew, skewX,skewY - can be used to rotate */
  /* transform:skew(30deg,30deg)  |  transform:skewX(30deg)  | transform:skewY(-30deg) */
  transform: skewX(30deg);

  /* translate by default moves towards the horizontal axis , if one parameter is given */
  /* translateX(100px)  |  translateY(100px)  | translate(100px,100px) | translate(100px) */
  transform: translate(100px, 100px);

  /* scale(1.2)  |  scaleX(1.5)   |  scaleY(1.5)   | scaleZ(1.5) */
  transform: scale(1.2);

  /* rotate(90deg) | rotateX()  |  rotateY()  |rotateZ()*/
  transform: rotateY(90deg);

  /* we can specify multiple properties as well */
  transform: rotateZ(90deg) scale(2) translate(50%, 50%);
}

------
Animation

#box1 {
  animation-name: myanimation;
  animation-duration: 1s;
  animation-timing-function: ease-in;
  /* animation-fill-mode: forwards; */
  animation-delay: 1s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  /* shorthand */
  animation: myanimation 1s ease-in 1s infinite alternate;
}
@keyframes myanimation {
  from {
    background-color: red;
  }
  to {
    background-color: green;
  }
}


-----
#box1 {
  animation-name: myanimation;
  animation-duration: 1s;
  animation-timing-function: ease-in;
  /* animation-fill-mode: forwards; */
  animation-delay: 1s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  /* shorthand */
  animation: myanimation 10s ease-in 1s infinite alternate;
}
@keyframes myanimation {
  0% {
    background-color: red;
    transform: scale(2);
  }
  50% {
    border-radius: 100%;
    background-color: blue;
  }
  100% {
    background-color: antiquewhite;
    transform: scale(20);
  }
}
===========================================================================

Pseudo Elements and Pseudo Classes:


styles first line of paragraph
p::first-line {
  color: aqua;
}

first letter of each paragraph will be styled
p::first-letter {
  color: aqua;
}


p::after {
  content: '❤️';
}

p::before {
  content: '✅';
  position: absolute;
  left: 10px;
  z-index: -1;
  opacity: 0.4;
}

we can leave content - with empty value 

//styling file upload button
input {
  border: 1px solid red;
}

input::-webkit-file-upload-button {
  background: rgb(0, 0, 0);
  padding: 2rem;
  color: white;
  border: none;
  border-radius: 20px;
  width: 100%;
}

//styling placeholder text
input[type='text'] {
  font: bold 1.5rem sans-serif;
  color: red;
}

input::placeholder {
  color: green;
}

----

pseudo elements:
LVHA
a:hover{

}

a:link{

}

a:visited{

}

a:active{

}

a:first-child{

}

a:nth-child(2n){

}

a:nth-child(even){

}
a:nth-child(odd){

}

a:nth-child(2n+1){

}

a:first-of-type{
  
}