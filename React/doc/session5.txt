continue the top-course-master project

In this we are using - react-toastify , react-icons , useState, useEffect ,external api data 
map function with key prop , filter the data , conditional rendering

API data Fetching
Like Unlike 
Filtering data 
==========================================================================================
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
    <ToastContainer />
  </React.StrictMode>
);



==========================================================================================
App.js 

import React, { useEffect, useState } from 'react';
import NavBar from './components/NavBar';
import Filter from './components/Filter';
import Cards from './components/Cards';
import { filterData, apiUrl } from './data';
import { toast } from 'react-toastify';
import Spinner from './components/Spinner';

const App = () => {
  const [courses, setCourses] = useState([]);
  const [loading, setLoading] = useState(true);
  const [category, setCategory] = useState(filterData[0].title);

  useEffect(() => {
    const fetchData = async () => {
      setLoading(true);
      try {
        const res = await fetch(apiUrl);
        const output = await res.json();
        setCourses(output.data);
        console.log(output.data);
      } catch (err) {
        toast.error('SomeThing went wrong');
      }
      setLoading(false);
    };
    fetchData();
  }, []);
  return (
    <div className="min-h-screen flex flex-col bg-bgDark2">
      <div>
        <NavBar />
      </div>
      <div className="bg-bgDark2">
        <div>
          <Filter
            filterData={filterData}
            category={category}
            setCategory={setCategory}
          />
        </div>
        <div className="w-11/12 max-w-[1200px] mx-auto flex flex-wrap justify-center items-center min-h-[50vh]">
          {loading ? (
            <Spinner />
          ) : (
            <Cards courses={courses} category={category} />
          )}
        </div>
      </div>
    </div>
  );
};

export default App;

==========================================================================================
NavBar.js 

import React from 'react';

const NavBar = () => {
  return (
    <div>
      <nav className="bg-bgDark py-4">
        <h1 className="text-3xl font-bold text-center text-white">
          Top Courses
        </h1>
      </nav>
    </div>
  );
};

export default NavBar;

==========================================================================================
Filter.js 

import React from 'react';

const Filter = ({ filterData, category, setCategory }) => {
  const filterHandler = (title) => {
    setCategory(title);
  };
  return (
    <div className="w-11/12 flex flex-wrap max-w-max space-x-4 gap-y-4 mx-auto py-4 justify-center">
      {filterData.map((data) => (
        <button
          className={`text-lg px-2 py-1 rounded-md font-medium
           text-white bg-black hover:bg-opacity-50 border-2 transition-all duration-300
           ${
             category === data.title
               ? 'bg-opacity-60 border-white'
               : 'bg-opacity-40 border-transparent'
           }
           `}
          key={data.id}
          onClick={() => filterHandler(data.title)}
        >
          {data.title}
        </button>
      ))}
    </div>
  );
};

export default Filter;

==========================================================================================
Cards.js 

import React, { useState } from 'react';
import Card from './Card';
const Cards = ({ courses, category }) => {
  let allCourses = [];
  const [likedCourses, setLikedCourses] = useState([]);

  const getCourses = () => {
    if (category === 'All') {
      Object.values(courses).forEach((courseCategory) => {
        courseCategory.forEach((course) => {
          allCourses.push(course);
        });
      });
      return allCourses;
    } else {
      return courses[category];
    }
  };
  return (
    <div className="flex flex-wrap justify-center gap-4 mb-4">
      {!courses ? (
        <div>
          <p>No Data Found</p>
        </div>
      ) : (
        getCourses().map((course) => (
          <Card
            course={course}
            key={course.id}
            likedCourses={likedCourses}
            setLikedCourses={setLikedCourses}
          />
        ))
      )}
    </div>
  );
};

export default Cards;

==========================================================================================
import React from 'react';
import { FcLike, FcLikePlaceholder } from 'react-icons/fc';
import { toast } from 'react-toastify';
const Card = ({ course, likedCourses, setLikedCourses }) => {
  function likeHandler() {
    if (likedCourses.includes(course.id)) {
      setLikedCourses((prev) => prev.filter((cid) => cid !== course.id));
      toast.warn('Like Removed');
    } else {
      if (likedCourses.length === 0) {
        setLikedCourses([course.id]);
      } else {
        setLikedCourses((prev) => [...prev, course.id]);
      }
      toast.success('Liked Successfully');
    }
  }
  return (
    <div className="w-[300px] bg-bgDark bg-opacity-80 rounded-md overflow-hidden">
      <div className="relative">
        <img src={course.image.url} alt="" />
        <div className="w-[40px] h-[40px] bg-white rounded-full absolute right-2 bottom-[-12px] grid place-items-center">
          <button onClick={likeHandler}>
            {!likedCourses.includes(course.id) ? (
              <FcLikePlaceholder fontSize="1.75rem" />
            ) : (
              <FcLike fontSize="1.75rem" />
            )}
          </button>
        </div>
      </div>
      <div className="p-4">
        <p className="text-white font-semibold text-lg leading-6">
          {course.title}
        </p>
        <p className="text-white mt-2">
          {course.description.length > 100
            ? course.description.substr(0, 100) + '...'
            : course.description}
        </p>
      </div>
    </div>
  );
};

export default Card;
==========================================================================================
import React from 'react';
import './Spinner.css';

const Spinner = () => {
  return (
    <div className="flex flex-col items-center space-y-2">
      <div className="spinner"></div>
      <p className="text-bgDark text-lg font-semibold">Loading...</p>
    </div>
  );
};

export default Spinner;

==========================================================================================
